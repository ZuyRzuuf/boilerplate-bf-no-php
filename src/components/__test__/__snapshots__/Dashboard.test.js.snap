// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`A suite renders correctly 1`] = `
<Fragment>
  <div>
    Dashboard
  </div>
  <Query
    query={
      Object {
        "Examples": Object {
          "definitions": Array [
            Object {
              "directives": Array [],
              "kind": "OperationDefinition",
              "name": Object {
                "kind": "Name",
                "value": "Examples",
              },
              "operation": "query",
              "selectionSet": Object {
                "kind": "SelectionSet",
                "selections": Array [
                  Object {
                    "arguments": Array [],
                    "directives": Array [],
                    "kind": "Field",
                    "name": Object {
                      "kind": "Name",
                      "value": "examples",
                    },
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "directives": Array [],
                          "kind": "FragmentSpread",
                          "name": Object {
                            "kind": "Name",
                            "value": "examplesData",
                          },
                        },
                      ],
                    },
                  },
                ],
              },
              "variableDefinitions": Array [],
            },
            Object {
              "directives": Array [],
              "kind": "FragmentDefinition",
              "name": Object {
                "kind": "Name",
                "value": "examplesData",
              },
              "selectionSet": Object {
                "kind": "SelectionSet",
                "selections": Array [
                  Object {
                    "arguments": Array [],
                    "directives": Array [],
                    "kind": "Field",
                    "name": Object {
                      "kind": "Name",
                      "value": "uuid",
                    },
                  },
                  Object {
                    "arguments": Array [],
                    "directives": Array [],
                    "kind": "Field",
                    "name": Object {
                      "kind": "Name",
                      "value": "name",
                    },
                  },
                ],
              },
              "typeCondition": Object {
                "kind": "NamedType",
                "name": Object {
                  "kind": "Name",
                  "value": "Example",
                },
              },
            },
          ],
          "kind": "Document",
          "loc": Object {
            "end": 119,
            "source": Object {
              "body": "query Examples {
    examples {
        ...examplesData
    }
}

fragment examplesData on Example {
    uuid
    name
}",
              "locationOffset": Object {
                "column": 1,
                "line": 1,
              },
              "name": "GraphQL request",
            },
            "start": 0,
          },
        },
        "definitions": Array [
          Object {
            "directives": Array [],
            "kind": "OperationDefinition",
            "name": Object {
              "kind": "Name",
              "value": "Examples",
            },
            "operation": "query",
            "selectionSet": Object {
              "kind": "SelectionSet",
              "selections": Array [
                Object {
                  "arguments": Array [],
                  "directives": Array [],
                  "kind": "Field",
                  "name": Object {
                    "kind": "Name",
                    "value": "examples",
                  },
                  "selectionSet": Object {
                    "kind": "SelectionSet",
                    "selections": Array [
                      Object {
                        "directives": Array [],
                        "kind": "FragmentSpread",
                        "name": Object {
                          "kind": "Name",
                          "value": "examplesData",
                        },
                      },
                    ],
                  },
                },
              ],
            },
            "variableDefinitions": Array [],
          },
          Object {
            "directives": Array [],
            "kind": "FragmentDefinition",
            "name": Object {
              "kind": "Name",
              "value": "examplesData",
            },
            "selectionSet": Object {
              "kind": "SelectionSet",
              "selections": Array [
                Object {
                  "arguments": Array [],
                  "directives": Array [],
                  "kind": "Field",
                  "name": Object {
                    "kind": "Name",
                    "value": "uuid",
                  },
                },
                Object {
                  "arguments": Array [],
                  "directives": Array [],
                  "kind": "Field",
                  "name": Object {
                    "kind": "Name",
                    "value": "name",
                  },
                },
              ],
            },
            "typeCondition": Object {
              "kind": "NamedType",
              "name": Object {
                "kind": "Name",
                "value": "Example",
              },
            },
          },
        ],
        "kind": "Document",
        "loc": Object {
          "end": 119,
          "source": Object {
            "body": "query Examples {
    examples {
        ...examplesData
    }
}

fragment examplesData on Example {
    uuid
    name
}",
            "locationOffset": Object {
              "column": 1,
              "line": 1,
            },
            "name": "GraphQL request",
          },
          "start": 0,
        },
      }
    }
  >
    <Component />
  </Query>
</Fragment>
`;
