// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Router /> suite renders HTML tree correctly 1`] = `
<div>
  <div>
    Backend/Frontend Node, React, Typescript boilerplate
  </div>
  <div>
    <a
      href="/"
    >
      Dashboard
    </a>
    <a
      href="/another-page"
    >
      Another Page
    </a>
    <a
      href="/wrong-uri"
    >
      Wrong URI
    </a>
  </div>
  <div>
    Dashboard
  </div>
</div>
`;

exports[`<Router /> suite renders components tree correctly 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      "/",
    ]
  }
  initialIndex={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "key": "42dedh",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "42dedh",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <App>
      <Router>
        <Component>
          <div>
            <Header>
              <div>
                Backend/Frontend Node, React, Typescript boilerplate
              </div>
              <div>
                <Link
                  replace={false}
                  to="/"
                >
                  <a
                    href="/"
                    onClick={[Function]}
                  >
                    Dashboard
                  </a>
                </Link>
                <Link
                  replace={false}
                  to="/another-page"
                >
                  <a
                    href="/another-page"
                    onClick={[Function]}
                  >
                    Another Page
                  </a>
                </Link>
                <Link
                  replace={false}
                  to="/wrong-uri"
                >
                  <a
                    href="/wrong-uri"
                    onClick={[Function]}
                  >
                    Wrong URI
                  </a>
                </Link>
              </div>
            </Header>
            <Switch>
              <Route
                component={[Function]}
                computedMatch={
                  Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  }
                }
                exact={true}
                location={
                  Object {
                    "hash": "",
                    "key": "42dedh",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  }
                }
                path="/"
              >
                <Dashboard
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "42dedh",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "42dedh",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                  location={
                    Object {
                      "hash": "",
                      "key": "42dedh",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    }
                  }
                  match={
                    Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    }
                  }
                >
                  <div>
                    Dashboard
                  </div>
                </Dashboard>
              </Route>
            </Switch>
          </div>
        </Component>
      </Router>
    </App>
  </Router>
</MemoryRouter>
`;

exports[`<Router /> suite renders isolated component correctly 1`] = `
<Fragment>
  <Router />
</Fragment>
`;
